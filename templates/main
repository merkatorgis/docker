#!/bin/bash

# edit:
export DOCKER_USER=provide_a_name

# Fork the merkatorgis/docker4gis repo and
# set the OS environment variable
# to the docker4gis/base directory:
export DOCKER_BASE=$DOCKER_BASE

# Either empty for Docker Hub:
export DOCKER_REGISTRY=
# or a registry location (including the trailing slash), eg:
# export DOCKER_REGISTRY=docker.merkator.com/

export DEBUG=false

export PROXY_HOST=
export PROXY_PORT=
export PROXY_PORT_HTTP=
export SECRET=
export API=
export AUTH_PATH=
export APP=
export HOMEDEST=

export POSTGRES_LOG_STATEMENT=
# export POSTGRES_LOG_STATEMENT=ddl
# export POSTGRES_LOG_STATEMENT=all

export POSTFIX_DESTINATION=
export POSTFIX_DOMAIN=

export MSYS_NO_PATHCONV=1

case "$1" in
build)
	# Build new image for component, tagging it as "latest".
	# Examples:
	# ./ex build proxy
	# ./ex build postgis
	# ./ex build geoserver
	# ./ex build app
	;;
run) ;;
br)
	# Build, and then run
	# Examples:
	# ./ex br proxy
	# ./ex br postgis
	# ./ex br geoserver
	# ./ex br app
	;;
latest) ;;
push)
	# Push a component's image to the registry.
	# If a tag is provided, the "latest" image is tagged and pushed as such.
	# The "latest" image is pushed in all cases.
	# Examples:
	# ./ex push api
	# ./ex push api 137
	;;
test)
	# Run a specific component's unit tests,
	# or the application's integration tests.
	# Examples:
	# ./ex test proxy
	# ./ex test app
	# ./ex test
	;;
stop)
	# Stop running containers.
	# Examples:
	# ./ex stop
	;;
geoserver)
	# Write the GeoServer container's config to your working directory.
	# Examples:
	# ./ex geoserver
	# ./ex geoserver app_name
	;;
esac

"$DOCKER_BASE/main.sh" "$0" "$@"
