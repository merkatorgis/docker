#!/bin/bash

action=$1
shift 1

here=$(dirname "$0")
if [ "$(basename "$here")" = '.bin' ]; then
    DOCKER4GIS_HOME=$(dirname "$0")/../$(basename "$0")
else
    DOCKER4GIS_HOME=$here
fi
DOCKER4GIS_HOME=$(realpath "$DOCKER4GIS_HOME")

case "$action" in

base)
    echo "$DOCKER4GIS_HOME"/base
    ;;

component)
    component=$1
    tag=$2
    template=$3

    [ "$component" ] || interactive=true
    [ "$component" ] || read -rp "Enter the docker4gis base image name, e.g. proxy, or postgis : " component
    [ "$component" ] || exit 1

    [ "$interactive" ] && {
        [ "$tag" ] || read -rp "Enter the base image's tag to use (default is latest) : " tag
    }
    [ "$tag" ] || tag=latest

    image=docker4gis/$component:$tag
    docker image pull "$image"
    container=$(docker container create "$image")
    [ "$container" ] || {
        echo "Image not found: $image"
        exit 2
    }

    docker container cp "$container":/template .
    docker container rm "$container" >/dev/null
    if ! [ "$template" ]; then
        default=./template/.default
        if [ -f "$default" ]; then
            default=$(cat "$default")
            template=$default
            [ "$interactive" ] && {
                choices=$(ls ./template)
                choices=$(echo "$choices" | xargs)
                read -rp "Enter the template name (one of: $choices - default is $default) : " template
                [ "$template" ] || template=$default
                ls ./template/"$template" >/dev/null 2>&1 || {
                    echo "Template not found: $template"
                    exit 3
                }
            }
        fi
    fi
    cp -r ./template/"$template"/* .
    rm -rf ./template
    ;;

init)
    DOCKER_REGISTRY=$1
    DOCKER_USER=$2
    SHORT_NAME=$3

    [ "$DOCKER_REGISTRY" ] || read -rp "Enter the Docker registry (default is the Docker Hub; enter m for docker.merkator.com : " DOCKER_REGISTRY
    [ "$DOCKER_REGISTRY" = 'm' ] && DOCKER_REGISTRY=docker.merkator.com
    [ "$DOCKER_REGISTRY" = 'h' ] && DOCKER_REGISTRY=
    [ "$DOCKER_REGISTRY" ] && DOCKER_REGISTRY="$DOCKER_REGISTRY"/

    [ "$DOCKER_USER" ] || read -rp "Enter the application's name (the \"user\" in the Docker registry) : " DOCKER_USER
    [ "$DOCKER_USER" ] || exit 1

    [ "$SHORT_NAME" ] || read -rp "Optionally enter a short command name (default is the application's name) : " SHORT_NAME
    SHORT_NAME=${SHORT_NAME:-$DOCKER_USER}

    DOCKER4GIS_VERSION=$(node -pe "require('$DOCKER4GIS_HOME/package.json').version")

    echo "DOCKER_REGISTRY=$DOCKER_REGISTRY
DOCKER_USER=$DOCKER_USER
DOCKER4GIS_VERSION=$DOCKER4GIS_VERSION
DEBUG=false
PROXY_HOST=
PROXY_PORT=
PROXY_PORT_HTTP=
SECRET=
API=
AUTH_PATH=
APP=
HOMEDEST=
POSTGRES_LOG_STATEMENT=
# POSTGRES_LOG_STATEMENT=ddl
# POSTGRES_LOG_STATEMENT=all
POSTFIX_DESTINATION=
POSTFIX_DOMAIN=
MSYS_NO_PATHCONV=1" >.env

    cp "$DOCKER4GIS_HOME"/templates/main "$SHORT_NAME"
    ;;

*)
    echo "Usage: $(basename "$0") init|component|base"
    ;;
esac
